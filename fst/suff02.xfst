#
# Script for generating diminutives in Portuguese
#
# This script runs in both Foma and XFST. It first 
# compiles the lexc grammar defined in suff02.lexc.
# This grammar defines a lexicon transducer 
# (Beesley & Karttunen 2003), mapping lexical strings 
# (abstract representations consisting of lemma and features)
# to intermediate forms. These intermediate forms are then mapped
# to the final strings (inflected words) by composing the lexicon transduceer 
# with a cascade of alternation rules. For more information on
# finite-state morphology, see Beesley & Karttunen (2003).
# Further references in the README file.

# Author: Leonel F. de Alencar, Federal University of Ceará
# Date: April 11, 2018

set flag-is-epsilon ON
clear

# anterior vowels
define AntVow [ e | i ] ;

# posterior vowels
define PostVow [ a | o | u ] ;

# vowels
define Vow [ AntVow | PostVow ] ;

# morpheme separator
define MorphSep %^ ;

# thematic vowels
define ThemVow [ a | e | o ] ;

# convert letter c to phone [s] to prevent rule ChangeC
# from applying in cases like face^inha (diminitive of face)
define PhonC [c -> %[ s %] || _ AntVow MorphSep  ]  ;

# convett back phone [s] to letter c
define OrthC %[ s %] -> c ;

# delete ç before morpheme separator and anterior vowel
define DeleteCedilla  [ ç -> c || _ MorphSep AntVow ];

# convert m to n before all letters except p or b
define NasalBilabAssim m -> n || _ MorphSep \[p|b];

# delete thematic vowel before morpheme separator and vowel
# casa^inha => cas^inha (diminutive of house)
define ThemVowDel ThemVow -> 0 || _ MorphSep Vow ;

# Note that the mapping examples used throughout these comments are simplified, 
# they should help grasping the functioning of the different alternation rules. 
# They don't correspond to the actual intermediate strings generated
# by the lexicon transducer.

# faca^inha => fac^inha => faqu^inha (diminutive of knife)
define ChangeC c -> {qu} || _ MorphSep AntVow ;

# manga^inha => mang^inha => mangu^inha (diminutive of mango)
define ChangeG g -> {gu} || _ MorphSep AntVow ;

# optionally delete e in cases like luzes^zinhas  (diminutive of light in plural)
define OptDelEStemZ e (->) 0 || [z | s] _ s MorphSep z ;

# optionally delete e in cases like flores^zinhas  (diminutive of flower in plural)
define OptDelEStemR e (->) 0 || r _ s MorphSep z ;

# composing the two previous rules
define OptDelE OptDelEStemZ .o. OptDelEStemR ;

# luzes^zinhas => luze^zinhas 
define SDeletion s  -> 0 || _ MorphSep z ;

# luz^zinhas => lu^zinhas
define ZDeletion z-> 0 || _ MorphSep z ;

# ideia^inha => idei^inha => ide^inha (diminutive of idea)
define IDeletion i-> 0 || _ MorphSep i ;

# delete morpheme separator
define DeleteMorphSep MorphSep -> 0 ;

# remove accents (diacritics marking stress) from derived words
define Unaccent [[á -> a] .o. [é -> e] .o. [ê -> e] .o. [ó -> o]
       		       	     	.o. [ô -> o] .o. [í -> i] .o. [ú -> u]
				.o. [â -> a ]];

# compose the cascade of alternation rules in one single transducer
define AltRules NasalBilabAssim .o. 
       				PhonC
				.o.
       				ThemVowDel 
				.o. 
				ChangeC 
				.o.
				OrthC
				.o.
				ChangeG 
				.o.
				OptDelE
				.o.
				SDeletion 
				.o.
				ZDeletion
				.o.
				IDeletion
				.o.
				Unaccent
				.o.
				DeleteCedilla
				.o.
				DeleteMorphSep ;

# convert abstract morpheme represeantation +DIM to inh suffix
# before thematic vowel, e.g.:
# casa^+DIM^a => cas^inh^a (diminutive of house)
# exepting cases where the thematic vowel is preceded by ã or õ, e.g.:
# pão => pão^+DIM^o => *pão^inh^o  (diminutive of bread)
define RealizeDim [ %+DIM -> {^inh} || \[ã|õ] ThemVow _ ] ;

# compiling lexc grammar
read lexc < suff02.lexc

# assigning resulting transducer to variable Lex
define Lex

# remove paths with +DIM in the transducer's lower language
define Filter ~ [$ %+DIM ] ;
# This prevents generation (and analysis) of ungrammatical forms like 
# *cafeinho (cafezinho, diminutive of coffee), *pãinho (pãozinho),
# *marinho (marzinho, diminutive of sea), *papelinho (papelzinho, 
# diminutive of paper), etc. This is subject to some dialectal variation,
# e.g. casalinho (diminutive of couple or town), which occurs in European Portuguese
# (Villalva & Silvestre 2014:120), and mulherinha (diminutive of woman), 
# which is used by some speakers of Brazilian Portuguese. These forms
# can be generated by changing the left context of the RealizeDim rule.

# compose everything into the final lexical transducer
# mapping lexical strings like pão+N+DIM+M+PL
# to surface strings (i.e. inflected words) like 
# pãezinhos (plural diminutive of bread)

regex Lex .o. RealizeDim .o. Filter .o. AltRules ;

