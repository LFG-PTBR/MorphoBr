! Author: Leonel F. de Alencar, leonel.de.alencar@ufc.br, Federal University of Ceará
! Date: September 11, 2018, bug corrections February 17, 2020

! Implementation of diminutive formation in Portuguese in the paradigm 
! of finite-state morphology (Beesley & Karttunen 2003)

! This file contains a morphotactic grammar in the Lexc formalism. It is part of
! a finite-state analyzer and generator of diminutives from
! nouns and adjectives without and with an augmentative suffix. 
! This grammar is a model of the well-formed combinations of morphemes to form
! all possible diminutives from the given words. 
! It can be compiled into a finite-state transducer both with Foma and XFST. 
! This finite-state network represents a lexicon transducer,
! encoding a regular relation consisting of pairs of lexical strings
! and intermediate strings. The latter are mapped onto surface strings by means 
! of composition with the transducer defined in the alternation-rules.xfst script.
! This composition is performed by the script compile-final-fst.xfst. See the README file
! for detailed instructions on how to compile and test the final lexical transducer.


LEXICON Root
	AdjNouns ;

LEXICON AdjNouns
! This sublexicon contains nouns and adjectives extracted from MorphoBr 
! by the Python module ExtractWordLemmaPairs.py. They are classified
! into four main categories:

!      (i) words with an augmentative suffix;
!      (ii) word-lemma pairs with both stems ending in s (e.g. "lápis");
!      (iii) masculine and feminine nouns with a non-canonical
!      gender marker, "a" and "o" repectively;
!      (iv) all other words.

! These categories are divided into separated files in spaced-text format according to
! gender and number. All these files are compiled into finite-state transducers.

! category (i)
< @stxt"aug_m_sg.stxt" "@U.GEND.M@" "@U.NUM.SG@" "@U.AUG.Y@" >	Suff ;
< @stxt"aug_m_pl.stxt" "@U.GEND.M@" "@U.NUM.PL@" "@U.AUG.Y@" >	Suff ;
< @stxt"aug_f_sg.stxt" "@U.GEND.F@" "@U.NUM.SG@" "@U.AUG.Y@" >	Suff ;
< @stxt"aug_f_pl.stxt" "@U.GEND.F@" "@U.NUM.PL@" "@U.AUG.Y@" >	Suff ;

! category (ii)
< @stxt"wdlm_in_s_m_sg.stxt"  "@U.GEND.M@" "@U.NUM.SG@" "@U.ENDING.S@" > StemS ;
< @stxt"wdlm_in_s_m_pl.stxt"  "@U.GEND.M@" "@U.NUM.PL@"  "@U.ENDING.S@" > StemS ;
< @stxt"wdlm_in_s_f_sg.stxt"  "@U.GEND.F@" "@U.NUM.SG@"  "@U.ENDING.S@" > StemS ;
< @stxt"wdlm_in_s_m_pl.stxt"  "@U.GEND.F@" "@U.NUM.PL@"  "@U.ENDING.S@" > StemS ;

! category (iii)
< @stxt"masc_in_a_sg.stxt" "@U.GEND.M@" "@U.NUM.SG@" "@U.TH.A@" >	Suff ;
< @stxt"fem_in_o_sg.stxt" "@U.GEND.F@" "@U.NUM.SG@" "@U.TH.O@" >	Suff ;
< @stxt"masc_in_a_pl.stxt" "@U.GEND.M@" "@U.NUM.PL@" "@U.TH.A@" >	Suff ;
< @stxt"fem_in_o_pl.stxt" "@U.GEND.F@" "@U.NUM.PL@" "@U.TH.O@" >	Suff ;

! category (iv)
< @stxt"other_m_sg.stxt" "@U.GEND.M@" "@U.NUM.SG@" >	Suff ;
< @stxt"other_m_pl.stxt" "@U.GEND.M@" "@U.NUM.PL@" >	Suff ;
< @stxt"other_f_sg.stxt" "@U.GEND.F@" "@U.NUM.SG@" >	Suff ;
< @stxt"other_f_pl.stxt" "@U.GEND.F@" "@U.NUM.PL@" >	Suff ;

LEXICON StemS
! appending marker $ to words with stems ending in s, e.g. "lápis" and "albanês"
! (see alternation-rules.xfst for a detailed explanation about this marker)
< 0:%$ >	Suff ;

LEXICON Suff
! The +DIM suffix is realized as -inh by one of the alternation rules.
! This dimunitive suffix variant requires singular forms
! ending in one of the thematic vowels "a", "o" or "e".

<%+DIM 0:%^ "@U.NUM.SG@" "@C.NUM@" >	Gend ;

! The -zinh dimunitive suffix variant attaches to all singular and plural
! word forms from the LEXICON AdjNouns.

<%+DIM:{^zinh} 0:%^ "@C.TH@" >	Gend ;

LEXICON Gend 
! canonical gender markers
< %+F:a 0:%^ "@U.GEND.F@" "@D.TH@" >	Num ;
< %+M:o 0:%^ "@U.GEND.M@"  "@D.TH@" >	Num ;

! non-canonical gender markers
< %+F:o 0:%^ "@R.TH.O@" >	Num ;
< %+M:a 0:%^ "@R.TH.A@" >	Num ;

LEXICON Num
< %+SG:0 "@U.NUM.SG@" >	# ;
< %+PL:s	"@U.NUM.PL@" > # ;
